name: "Cosineloss"
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "/media/camalab/DATADRIVE1/HDF5/train_h5_list.txt"
    batch_size:64
  }
}

layer {
  name: "convolution1"
  type: "Convolution"
  bottom: "data"
  top: "convolution1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu11"
  type: "ReLU"
  bottom: "convolution1"
  top: "convolution1"
}
layer {
  name: "norm11"
  type: "LRN"
  bottom: "convolution1"
  top: "norm11"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool11"
  type: "Pooling"
  bottom: "norm11"
  top: "pool11"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv12"
  type: "Convolution"
  bottom: "pool11"
  top: "conv12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu12"
  type: "ReLU"
  bottom: "conv12"
  top: "conv12"
}
layer {
  name: "norm12"
  type: "LRN"
  bottom: "conv12"
  top: "norm12"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool12"
  type: "Pooling"
  bottom: "norm12"
  top: "pool12"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv13"
  type: "Convolution"
  bottom: "pool12"
  top: "conv13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu13"
  type: "ReLU"
  bottom: "conv13"
  top: "conv13"
}

layer {
  name: "conv14"
  type: "Convolution"
  bottom: "conv13"
  top: "conv14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu14"
  type: "ReLU"
  bottom: "conv14"
  top: "conv14"
}
layer {
  name: "pool14"
  type: "Pooling"
  bottom: "conv14"
  top: "pool14"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "ip11"
  type: "InnerProduct"
  bottom: "pool14"
  top: "ip11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "relu5"
  type: "ReLU"
  bottom: "ip11"
  top: "ip11"
}

layer {
  name: "drop1"
  type: "Dropout"
  bottom: "ip11"
  top: "ip11"
  dropout_param {
    dropout_ratio: 0.5
  }
}


layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip11"
  top: "ip3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}

layer {
  name: "drop2"
  type: "Dropout"
  bottom: "ip3"
  top: "ip3"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip3"
  top: "ip2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}




layer {
  name: "loss"
  type: "CosineLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
