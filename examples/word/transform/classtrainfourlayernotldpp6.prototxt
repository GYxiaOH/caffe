layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  top: "typelabel"
  top: "haslabel"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "/media/camalab/DATADRIVE1/HDF5/dpp/train/train_h5_list.txt"
    batch_size:64
  }
}

layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  top: "typelabel"
  top: "haslabel"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "/media/camalab/DATADRIVE1/HDF5/dpp/val/val_h5_list.txt"
    batch_size:100
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool4"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}


layer {
  name: "relu5"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}


layer {
  name: "drop5"
  type: "Dropout"
  bottom: "ip1"
  top: "ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
}



layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "ip3"
  top: "ip3"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip3"
  top: "ip2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1057
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "ip2/bn"
  type: "BatchNorm"
  bottom: "ip2"
  top: "ip2/bn"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}
layer {
  name: "ip2/scale"
  type: "Scale"
  bottom: "ip2/bn"
  top: "ip2/scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2/scale"
  top: "ip2/scale"
}

layer {
  name: "ip2/preclick"
  type: "InnerProduct"
  bottom: "ip3"
  top: "ip2/preclick"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1057
    weight_filler {
      type: "gaussian" 
      std: 0.01
      mean: 0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu7"
  type: "ReLU"
  bottom: "ip2/preclick"
  top: "ip2/preclick"
}



layer {
  name: "relu8"
  type: "ReLU"
  bottom: "label"
  top: "label"
}

layer 
{
  name: "AaddB"
  type: "Eltwise"
  bottom: "ip2/preclick"
  bottom: "label"
  top: "aaddb"
  eltwise_param {
    operation: SUM
    coeff: 0.5
    coeff: 0.5
  }
}

layer 
{
  name: "AsubB"
  type: "Eltwise"
  bottom: "ip2/preclick"
  bottom: "label"
  top: "asubb"
  eltwise_param {
    operation: SUM
    coeff: 0.5
    coeff: -0.5
  }
}

layer {
  name: "tilehaslabel"
  type: "Tile"
  bottom: "haslabel"
  top: "tilehaslabel"
  tile_param {
    axis:1
    tiles:1057
  }
}

layer {
  name: "AsubBMultHasLabel"
  type: "Eltwise"
  bottom: "tilehaslabel"
  bottom: "asubb"
  top: "asubblabel"
 eltwise_param {
    operation: PROD
  }
}

layer 
{
  name: "AaddB/asubblabel"
  type: "Eltwise"
  bottom: "aaddb"
  bottom: "asubblabel"
  top: "aaddb/asubblabel"
  eltwise_param {
    operation: SUM
    coeff: 1
    coeff: 1
  }
}



layer {
  name: "eucloss"
  type: "EuclideanLoss"
  bottom: "ip2/preclick"
  bottom: "aaddb/asubblabel"
  loss_weight:1
  top: "eucloss"
}

layer {
  name: "aaddb/asubblabel/bn"
  type: "BatchNorm"
  bottom: "aaddb/asubblabel"
  top: "aaddb/asubblabel/bn"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
  }
}
layer {
  name: "aaddb/asubblabel/scale"
  type: "Scale"
  bottom: "aaddb/asubblabel/bn"
  top: "aaddb/asubblabel/scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu10"
  type: "ReLU"
  bottom: "aaddb/asubblabel/scale"
  top: "aaddb/asubblabel/scale"
}

layer { 
  name: "concat"
  type: "Concat"
  bottom: "ip2/scale"
  bottom: "aaddb/asubblabel/scale"
  top: "concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "ip4"
  type: "InnerProduct"
  bottom: "concat"
  top: "ip4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 283
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip4"
  bottom: "typelabel"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
  name: "accuracytop5"
  type: "Accuracy"
  bottom: "ip4"
  bottom: "typelabel"
  top: "accuracytop5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 5
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip4"
  bottom: "typelabel"
  top: "loss"
  loss_weight: 1
  
}
